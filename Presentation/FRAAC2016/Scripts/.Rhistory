MC.Result
MC.result
p2 <- ggplot(aes(x= as.factor(round(Z.sim,1)), y=Z.est, fill = Estimator.type),
             data = MC.result[-1,]) + geom_boxplot()
print(p2)
MC.result$Z.sim
as.numeric(MC.result$Z.sim)
MC.result$Z.sim <- as.numeric(MC.result$Z.sim)
p2 <- ggplot(aes(x= as.factor(round(Z.sim,1)), y=Z.est, fill = Estimator.type),
             data = MC.result[-1,]) + geom_boxplot()
print(p2)
MC.result$Z.sim <- as.numeric(MC.result$Z.sim)
MC.result$Z.est <- as.numeric(MC.result$Z.est)
p2 <- ggplot(aes(x= as.factor(round(Z.sim,1)), y=Z.est, fill = Estimator.type),
             data = MC.result[-1,]) + geom_boxplot()
print(p2)
source("MCtestCrossSectionalAnalysis.R")
MC.result
source("MCtestCrossSectionalAnalysis.R")
source("MCtestCrossSectionalAnalysis.R")
system("pwd")
system("ls")
system("ls ..")
system("mkdir ../Results")
system("mkdir ../Results/Simulations")
system("mkdir ../Results/Simulations/Archive")
source("MCtestCrossSectionalAnalysis.R")
p2 <- p2 + scale_y_continuous(minor_breaks = seq(-1, 1, 0.1), breaks = seq(-1,2,0.5))
print(p2)
p2 <- ggplot(aes(x= as.factor(round(Z.sim,1)), y=Z.est, fill = Estimator.type),
             data = MC.result[-1,]) + geom_boxplot()
p2 <- p2 + scale_y_continuous(minor_breaks = seq(-1, 2, 0.1), breaks = seq(-1,2,0.5))
print(p2)
system("ls ../Results/Simulations")
system("ls ../Results/Simulations/Archive")
CompareEstimates-Sat-May-23-13:13:20-2015.csv
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
system("pwd")
system("ls")
system("ls ..")
system("ls ../Results")
system("ls ../Results/Simulations")
system("mkdir ../Results/Graphics")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
?geom_abline
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
round(seq(0.5, 0.6, 0.01), 1)
round(10 * seq(0.5, 0.6, 0.01), 1) / 10
round(100 * seq(0.5, 0.6, 0.01)) / 100
round(100 * seq(0.5, 0.6, 0.01))
round(100 * seq(0.5, 0.6, 0.01), -1)
round(100 * seq(0.55, 0.6, 0.01),)
round(seq(0.45,0.55,0.01),1)
round(seq(0.45,0.55,0.01),2)
round(seq(0.55,0.65,0.01),1)
p1
names(p1)
names(p1$mapping)
p1$mapping
p1$coordinates
p1$layers
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
?geom_line
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
print(p1)
print(p2)
head(MC.result)
p2 <- ggplot(aes(x= as.factor(round(Z.sim,1)), y=Z.est, fill = Estimator.type),
             data = MC.result) + geom_boxplot(alpha = 0.6)
print(p2)
p2 <- p2 + scale_x_discrete(name = "Simulated (1/year)") + scale_y_continuous(minor_breaks = seq(-1, 2, 0.1), breaks = seq(-1,2,0.2), name = "Estimated (1/year)")
d2 <- data.frame(x2 = seq(0.6,1.3,0.1))
p2 <- p2 + geom_line(data = d2, aes(x = as.numeric(ordered(x2)), y =x2), colour = "blue", size = 2)
p2 <- p2 + geom_boxplot(alpha = 0.6)
p2
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
nb.of.cohort <- 30
max.age <- 16
population <- GenerateData3(max.age = max.age, nb.of.cohort = nb.of.cohort, catchability.range = c(1.5,2.5), effort.range = c(2e3, 4e3), nat.mort.range = c(0.3, 0.36), recruitment.range = c(4e6, 8e6), log.para.range = c(7.5,8.5), log.parb.range=c(2,3))
names(population)
n.sample.per.year <- 2000
nb.at.age.sample <- draw.sample(population$catch, sample.size = n.sample.per.year * (nb.of.cohort + 1 - max.age))
nb.at.age.sample
library(SAFR)
sim.Z <- population$M + Coaa2Caaa(population$F)
dimnames(sim.Z) <- dimnames(est.nb.at.age.in.catch)
print(rowMeans(sim.Z[8:nrow(sim.Z),4:9]))
source("UsefulFunction.R"); 
sa.tmp <- SurvivalAnalysis()
q.est <- sa.tmp[["optimization"]]$par[1] * sa.tmp[["optimization"]]$catchability.scaling.factor[1]
est.log.para <- sa.tmp[["optimization"]]$par[3]
est.log.parb <- sa.tmp[["optimization"]]$par[4]
selectivity.at.age <- logistic(est.log.para,est.log.parb,seq(1,max.age))
F.est <- q.est * population$effort * outer(rep(1, nrow(population$effort)), selectivity.at.age)
M.est <- sa.tmp[["optimization"]]$par[2]
Z.est <- F.est + M.est
rowMeans(Z.est[8:nrow(sim.Z),4:9])
names(sa.tmp)
sa.tmp$optimization.status
source("MCtestCrossSectionalAnalysis.R")
nb.at.age.sample
source("MCtestCrossSectionalAnalysis.R")
nb.at.age.sample
source("MCtestCrossSectionalAnalysis.R")
p2 <- ggplot(aes(x= as.factor(round(Z.sim,1)), y=Z.est, fill = Estimator.type),
             data = MC.result[-1,]) + geom_boxplot()
p2 <- p2 + scale_y_continuous(minor_breaks = seq(-1, 2, 0.1), breaks = seq(-1,2,0.2), name = "Estimated (1/year)")
print(p2)
nb.at.age.sample
source("MCtestCrossSectionalAnalysis.R")
dim(sim.Z)
source("MCtestCrossSectionalAnalysis.R")
nb.at.age.sample
sum(nb.at.age.sample)
sum(nb.at.age.sample)/5e3
rowSums(nb.at.age.sample)
source("MCtestCrossSectionalAnalysis.R")
head(MC.result)
with(MC.results[-1,], plot( Z.sim, Z.est, pch = 10, col = "Estimator.type")); abline(0,1)
with(MC.result[-1,], plot( Z.sim, Z.est, pch = 10, col = "Estimator.type")); abline(0,1)
with(MC.result[-1,], plot( Z.sim, Z.est, pch = 10, col = Estimator.type)); abline(0,1)
with(MC.result[-1,], plot( Z.sim, Z.est, pch = 10, col = as.numeric(Estimator.type))); abline(0,1)
with(MC.result[-1,], plot( Z.sim, Z.est, pch = 10, col = as.numeric(as.character(Estimator.type)))); abline(0,1)
with(MC.result[-1,], plot( Z.sim, Z.est, pch = 19, col = as.numeric(as.character(Estimator.type)))); abline(0,1)
with(MC.result[-1,], table(Estimator.type))
with(MC.result[-1,], table(as.numeric(Estimator.type)))
with(MC.result[-1,], plot( Z.sim, Z.est, pch = 19, col = ifelse(Estimator.type == "cross sectional", "black", "red")); abline(0,1)
with(MC.result[-1,], plot( Z.sim, Z.est, pch = 19, col = ifelse(Estimator.type == "cross sectional", "black", "red"))); abline(0,1)
source("MCtestCrossSectionalAnalysis.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
?color
??color
?colors
??transparent
?alpha
library(scales)
?alpha
?alpha
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
?geom_scatter
?geom_point
source("PlotMCsimulations.R")
p0 <- ggplot(aes(x= Z.sim, y=Z.est, fill = Estimator.typ),
             data = MC.result) + geom_point()
print(p0)
p0 <- ggplot(aes(x= Z.sim, y=Z.est, fill = Estimator.type),
             data = MC.result) + geom_point()
print(p0)
?ggplot
?geom_point
p0 <-geom_point(aes(x= Z.sim, y=Z.est, fill = Estimator.type), data = MC.result)
print(p0)
p0 <-ggplot(es(x= Z.sim, y=Z.est, fill = Estimator.type), data = MC.result) + geom_point(aes(x= Z.sim, y=Z.est, fill = Estimator.type), data = MC.result)
print(p0)
p0 <-geom_point(aes(x= Z.sim, y=Z.est, fill = Estimator.type), data = MC.result)
print(p0)
p0 <-ggplot(aes(x= Z.sim, y=Z.est, fill = Estimator.type), data = MC.result) + geom_point(aes(x= Z.sim, y=Z.est, fill = Estimator.type), data = MC.result)
print(p0)
?geom_point
p0 <-ggplot(aes(x= Z.sim, y=Z.est, fill = Estimator.type), data = MC.result) + geom_point(colour = c("blue", "red"), alpha = 0.5)
print(p0)
?geom_point
p0 <-ggplot(aes(x= Z.sim, y=Z.est), data = MC.result) + geom_point(colour = Estimate.type, alpha = 0.5)
print(p0)
p0 <-ggplot(aes(x= Z.sim, y=Z.est), data = MC.result) + geom_point(colour = Estimator.type, alpha = 0.5)
print(p0)
p0 <-ggplot(aes(x= Z.sim, y=Z.est), data = MC.result) + geom_point(aes(colour = Estimator.type), alpha = 0.5)
print(p0)
?geom_abline
p0 <-ggplot(aes(x= Z.sim, y=Z.est), data = MC.result) + geom_point(aes(colour = Estimator.type), alpha = 0.5)
p0 <- p0 + geom_abline(intercept = 0, slope = 1, colour = "black", size = 2)
print(p0)
p0 <-ggplot(aes(x= Z.sim, y=Z.est), data = MC.result) + geom_point(aes(colour = Estimator.type), alpha = 0.5)
p0 <- p0 + geom_abline(intercept = 0, slope = 1, colour = "black", size = 1.5)
print(p0)
p0 <-ggplot(aes(x= Z.sim, y=Z.est), data = MC.result) + geom_point(aes(colour = Estimator.type), alpha = 0.5)
p0 <- p0 + geom_abline(intercept = 0, slope = 1, colour = "black", size = 1)
print(p0)
p0 <-ggplot(aes(x= Z.sim, y=Z.est), data = MC.result) + geom_point(aes(colour = Estimator.type), alpha = 0.5)
p0 <- p0 + geom_abline(intercept = 0, slope = 1, colour = "black", size = 1)
p0 <- p0 + scale_x_continuous(name = "Simulated (1/year)") + scale_y_continuous(name = "Estimated (1/year)")
print(p0)
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
system("gv ../Results/Graphics/ComparisonBetweenCSandSAmctestScatterPlot4Presentation.ps")
p0 <-ggplot(aes(x= Z.sim, y=Z.est), data = MC.result) + geom_point(aes(colour = Estimator.type), alpha = 0.5)
p0 <- p0 + geom_abline(intercept = 0, slope = 1, colour = "black", size = 1)
p0 <- p0 + scale_x_continuous(name = "Simulated (1/year)") + scale_y_continuous(name = "Estimated (1/year)")
print(p0)
p0 <-ggplot(aes(x= Z.sim, y=Z.est), data = MC.result) + geom_point(aes(colour = Estimator.type), alpha = 0.9)
p0 <- p0 + geom_abline(intercept = 0, slope = 1, colour = "black", size = 1)
p0 <- p0 + scale_x_continuous(name = "Simulated (1/year)") + scale_y_continuous(name = "Estimated (1/year)")
print(p0)
postscript(file = "../Results/Graphics/ComparisonBetweenCSandSAmctestScatterPlot4Presentation.ps")
#par(fg = "black", col.main = "black", col.axis = "black", col.lab = "black", cex = 1.5, cex.lab = 1.8, cex.axis = 1.5, cex.main = 2.5, mai =
# c(1.5, 1.8, 1.02, 0.2), mgp = c(3.8, 1, 0))
#with(MC.result,
#plot( Z.sim, Z.est, pch = 19, col = ifelse(Estimator.type == "cross sectional", "lightgrey", "red"),
#      xlab = "Simulated total mortality (age-group 4-9, 1/year)", ylab = "Estimated total mortality", las = 1)) 
#legend(0.6, 1.4, pch = 19, col = c("lightgrey", "red"), legend = c("cross sectional", "survival analysis"))
#abline(0,1, col = "blue", lwd = 2)
p0 <-ggplot(aes(x= Z.sim, y=Z.est), data = MC.result) + geom_point(aes(colour = Estimator.type), alpha = 0.9)
p0 <- p0 + geom_abline(intercept = 0, slope = 1, colour = "black", size = 1)
p0 <- p0 + scale_x_continuous(name = "Simulated (1/year)") + scale_y_continuous(name = "Estimated (1/year)")
print(p0)
dev.off()
system("gv ../Results/Graphics/ComparisonBetweenCSandSAmctestScatterPlot4Presentation.ps")
# Simple scatter plot
postscript(file = "../Results/Graphics/ComparisonBetweenCSandSAmctestScatterPlot4Presentation.ps")
#par(fg = "black", col.main = "black", col.axis = "black", col.lab = "black", cex = 1.5, cex.lab = 1.8, cex.axis = 1.5, cex.main = 2.5, mai =
# c(1.5, 1.8, 1.02, 0.2), mgp = c(3.8, 1, 0))
#with(MC.result,
#plot( Z.sim, Z.est, pch = 19, col = ifelse(Estimator.type == "cross sectional", "lightgrey", "red"),
#      xlab = "Simulated total mortality (age-group 4-9, 1/year)", ylab = "Estimated total mortality", las = 1)) 
#legend(0.6, 1.4, pch = 19, col = c("lightgrey", "red"), legend = c("cross sectional", "survival analysis"))
#abline(0,1, col = "blue", lwd = 2)
p0 <-ggplot(aes(x= Z.sim, y=Z.est), data = MC.result) + geom_point(aes(colour = Estimator.type), alpha = 1)
p0 <- p0 + geom_abline(intercept = 0, slope = 1, colour = "black", size = 1)
p0 <- p0 + scale_x_continuous(name = "Simulated (1/year)") + scale_y_continuous(name = "Estimated (1/year)")
print(p0)
dev.off()
system("gv ../Results/Graphics/ComparisonBetweenCSandSAmctestScatterPlot4Presentation.ps")
source("PlotMCsimulations.R")
?continuous_scale
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
system("gv ../Results/Graphics/ComparisonBetweenCSandSAmctestScatterPlot4Presentation.ps")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
system("gv ../Results/Graphics/ComparisonBetweenCSandSAmctestScatterPlot4Presentation.ps")
source("PlotMCsimulations.R")
system("gv ../Results/Graphics/ComparisonBetweenCSandSAmctestScatterPlot4Presentation.ps")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
system("gv ../Results/Graphics/ComparisonBetweenCSandSAmctestScatterPlot4Presentation.ps")
# Load data estimated number at age in the catch
tmp.data <- read.csv("../Data/MulletNumberAtAgeHarvestedForMarco2007-2014.csv")
catch.at.age <- with(tmp.data, tapply(Numbers.Harvested, list(Year, Age.Group), I))
catch.at.age <- replace(catch.at.age, is.na(catch.at.age), 0)
# Plot
library(ggplot2)
p1 <- ggplot(tmp.data, aes(Age.Group, log(Numbers.Harvested))) + geom_point() + facet_wrap(~Year, nrow = 2)
p1 <- p1 + scale_x_continuous(name = "Age groups (year)", minor_breaks = seq(-1, 20, 1), breaks = seq(0,20,5)) + scale_y_continuous(name = "Estimated nb at age in catch (log-scale)")
p1 <- p1 + geom_smooth(data = subset(tmp.data, Age.Group >= 4 & Age.Group <= 9), method = "lm", se = FALSE)
p1 <- p1 + theme(axis.text=element_text(size=12), axis.title=element_text(size=18,face="bold"), legend.text=element_text(size=18))
p1 <- p1 + theme(legend.title=element_text(size=18))
print(p1)
postscript(file = "../Graphics/MulletCrossSectionalAnalysis4Presentation.ps")
print(p1)
dev.off()
# Plot cross sectional results on their own
p1 <- ggplot(aes(x= Z.sim, y=Z.est),
             data = subset(MC.result, Estimator.type %in% c("cross sectional"))) 
p1 <- p1 + geom_boxplot(aes(x= as.factor(round(Z.sim,1)), y=Z.est), alpha = 0.6)
p1 <- p1 + scale_x_discrete(name = "Simulated (1/year)") + scale_y_continuous(minor_breaks = seq(-1, 2, 0.1), breaks = seq(-1,2,0.2), name = "Estimated (1/year)")
d2 <- data.frame(x2 = seq(0.6,1.3,0.1))
p1 <- p1 + geom_line(data = d2, aes(x = as.numeric(ordered(x2)), y =x2), colour = "blue", size = 2)
p1 <- p1 + geom_boxplot(aes(x= as.factor(round(Z.sim,1)), y=Z.est), alpha = 0.6)
p1 <- p1 + theme(axis.text=element_text(size=12), axis.title=element_text(size=18,face="bold"), legend.text=element_text(size=18))
p1 <- p1 + theme(legend.title=element_text(size=18))
print(p1)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
# Plot cross sectional results on their own
p1 <- ggplot(aes(x= Z.sim, y=Z.est),
             data = subset(MC.result, Estimator.type %in% c("cross sectional"))) 
p1 <- p1 + geom_boxplot(aes(x= as.factor(round(Z.sim,1)), y=Z.est), alpha = 0.6)
p1 <- p1 + scale_x_discrete(name = "Simulated (1/year)") + scale_y_continuous(minor_breaks = seq(-1, 2, 0.1), breaks = seq(-1,2,0.2), name = "Estimated (1/year)")
d2 <- data.frame(x2 = seq(0.6,1.3,0.1))
p1 <- p1 + geom_line(data = d2, aes(x = as.numeric(ordered(x2)), y =x2), colour = "blue", size = 2)
p1 <- p1 + geom_boxplot(aes(x= as.factor(round(Z.sim,1)), y=Z.est), alpha = 0.6)
p1 <- p1 + theme(axis.text=element_text(size=12), axis.title=element_text(size=18,face="bold"), legend.text=element_text(size=18))
p1 <- p1 + theme(legend.title=element_text(size=18))
print(p1)
# Plot cross sectional results on their own
p1 <- ggplot(aes(x= Z.sim, y=Z.est),
             data = subset(MC.result, Estimator.type %in% c("cross sectional"))) 
p1 <- p1 + geom_boxplot(aes(x= as.factor(round(Z.sim,1)), y=Z.est), alpha = 0.6)
p1 <- p1 + scale_x_discrete(name = "Simulated (1/year)") + scale_y_continuous(minor_breaks = seq(-1, 2, 0.1), breaks = seq(-1,2,0.2), name = "Estimated (1/year)")
d2 <- data.frame(x2 = seq(0.6,1.3,0.1))
p1 <- p1 + geom_line(data = d2, aes(x = as.numeric(ordered(x2)), y =x2), colour = "blue", size = 2)
p1 <- p1 + geom_boxplot(aes(x= as.factor(round(Z.sim,1)), y=Z.est), alpha = 0.6)
p1 <- p1 + theme(axis.text=element_text(size=12), axis.title=element_text(size=18,face="bold"), legend.text=element_text(size=18))
p1 <- p1 + theme(legend.title=element_text(size=18))
#print(p1)
postscript(file = "../Results/Graphics/MCtestCrossSectional4Presentation.ps")
print(p1)
dev.off()
48/88
# load data
MC.result <- read.csv("../Results/Simulations/Archive/CompareEstimates-Sat-May-23-13:13:20-2015.csv")
# Simple scatter plot
postscript(file = "../Results/Graphics/ComparisonBetweenCSandSAmctestScatterPlot4Presentation.ps")
#par(fg = "black", col.main = "black", col.axis = "black", col.lab = "black", cex = 1.5, cex.lab = 1.8, cex.axis = 1.5, cex.main = 2.5, mai =
# c(1.5, 1.8, 1.02, 0.2), mgp = c(3.8, 1, 0))
#with(MC.result,
#plot( Z.sim, Z.est, pch = 19, col = ifelse(Estimator.type == "cross sectional", "lightgrey", "red"),
#      xlab = "Simulated total mortality (age-group 4-9, 1/year)", ylab = "Estimated total mortality", las = 1)) 
#legend(0.6, 1.4, pch = 19, col = c("lightgrey", "red"), legend = c("cross sectional", "survival analysis"))
#abline(0,1, col = "blue", lwd = 2)
p0 <-ggplot(aes(x= Z.sim, y=Z.est), data = MC.result) + geom_point(aes(colour = Estimator.type), alpha = 1)
p0 <- p0 + geom_abline(intercept = 0, slope = 1, colour = "black", size = 1)
p0 <- p0 + scale_x_continuous(name = "Simulated (1/year)") + scale_y_continuous(name = "Estimated (1/year)")
p0 <- p0 + theme(axis.text=element_text(size=12), axis.title=element_text(size=18,face="bold"), legend.text=element_text(size=18))
p0 <- p0 + labs(colour="Estimator type") + theme(legend.title=element_text(size=18))
print(p0)
dev.off()
source("PlotMCsimulations.R")
source("PlotMCsimulations.R")
source("ApplyCrossSectionalToMulletData.R")
results
head(results)
source("ApplyCrossSectionalToMulletData.R")
source("ApplyCrossSectionalToMulletData.R")
source("ApplyCrossSectionalToMulletData.R")
results$Z.est
source("ApplyCrossSectionalToMulletData.R")
source("ApplyCrossSectionalToMulletData.R")
source("ApplyCrossSectionalToMulletData.R")
source("ApplyCrossSectionalToMulletData.R")
source("ApplyCrossSectionalToMulletData.R")
source("ApplyCrossSectionalToMulletData.R")
source("ApplyCrossSectionalToMulletData.R")
system("ls")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
my.Z
my.cumsum(my.Z)
my.cumsum
cumsum
cumsum(my.Z)
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
my.Z
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * F, M + floor((x-1)) * F))
cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * F, M + floor((x-1)) * F)))
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * F, M + floor((x-1)) * F))))
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * 2*F, M + floor((x-1)) * 2*F))))
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * 2*F, M + floor((x-1)) * 2*F))), type ="l")
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * 2*F, M + floor((x-1)) * 2*F))), type ="l", xlim = c(0,5))
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * 2*F, M + floor((x-1)) * 2*F))), type ="l", xlim = c(0,5))
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * 5*F, M + floor((x-1)) * 5*F))), type ="l", xlim = c(0,5))
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * 5*F, M + floor((x-1)) * 5*F))), type ="l")
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * 5*F, M + floor((x-1)) * 5*F))), type ="l" xlim = c(0,10))
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * 5*F, M + floor((x-1)) * 5*F))), type ="l", xlim = c(0,10))
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * 10*F, M + floor((x-1)) * 10*F))), type ="l", xlim = c(0,10))
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * x * F, M + floor((x-1)) * x * F))), type ="l", xlim = c(0,10))
ifelse( x < rec.age, M, ifelse(x > 6, M + 5 * x * F, M + floor((x-1)) * x * F))
ifelse( x < rec.age, M, ifelse(x > 6, M + x * F, M + floor((x-1)) * 5 * F))
ifelse( x < rec.age, M, ifelse(x > 6, M + x * F, M + 5))
ifelse( x < rec.age, M, ifelse(x > 6, M + 5, M + 5))
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5, M + 5))), type = "l")
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + x * F, M + 5))), type = "l")
ifelse( x < rec.age, M, ifelse(x > 6, M + 5, M + x * F))
ifelse( x < rec.age, M, ifelse(x > 6, M + 5, floor((x-1)) * 5 * F))
plot(cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5, floor((x-1)) * 5 * F)), type = "l")
)
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5, floor((x-1)) * 5 * F))), type = "l")
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5, floor((x-1)) * 5 * F))), type = "l", xlim = c(0,6), ylim = c(0,30))
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5, floor((x-1)) * 5 * F))), type = "l", xlim = c(0,6), ylim = c(0,30), lwd = 2)
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
my.Z <- ifelse( x < rec.age, M, ifelse(x > 6, M + 5, M + floor((x-1)) * F))
cum.Z <- cumsum(my.Z)
my.Z
cum.Z
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
my.Z
plot(x, cumsum(ifelse( x < rec.age, M, ifelse(x > 6, M + 5, floor((x-1)) * 5 * F))), type = "l", xlim = c(0,6), ylim = c(0,30), lwd = 2)
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
head(cum.Z)
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
system("pwd")
system("ls")
system("ls ..")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
system("ls ..")
system("ls ../Results/Graphics/IllustrationOfSurvivalAnalysisConcepts.ps")
system("ls ../Results/Graphics/IllustrationOfSurivalAnalysisConcepts.ps")
system("gv ../Results/Graphics/IllustrationOfSurivalAnalysisConcepts.ps")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
system("gv ../Results/Graphics/IllustrationOfSurivalAnalysisConcepts.ps")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
x <- seq(0,10, length=1e3)
M <- 0.1
Z <- M + 0.8
rec.age <- 2
library(SAFR)
my.Z <- ifelse(x < rec.age, M, Z) #c(rep(M, rec.age), rep(Z, max(x) - rec.age))
cum.Z <- cumsum(my.Z)
length(x)
length(cum.Z)
source("IllustrationOfSurvivalAnalysisConcepts.R")
system("gv ../Results/Graphics/IllustrationOfSurivalAnalysisConcepts.ps")
source("IllustrationOfSurvivalAnalysisConcepts.R")
system("gv ../Results/Graphics/IllustrationOfSurivalAnalysisConcepts.ps")
source("IllustrationOfSurvivalAnalysisConcepts.R")
system("gv ../Results/Graphics/IllustrationOfSurivalAnalysisConcepts.ps")
source("IllustrationOfSurvivalAnalysisConcepts.R")
system("gv ../Results/Graphics/IllustrationOfSurivalAnalysisConcepts.ps")
source("IllustrationOfSurvivalAnalysisConcepts.R")
system("gv ../Results/Graphics/IllustrationOfSurivalAnalysisConcepts.ps")
source("IllustrationOfSurvivalAnalysisConcepts.R")
source("IllustrationOfSurvivalAnalysisConcepts.R")
system("gv ../Results/Graphics/IllustrationOfSurivalAnalysisConcepts.ps")
source("IllustrationOfSurvivalAnalysisConcepts.R")
system("gv ../Results/Graphics/IllustrationOfSurivalAnalysisConcepts.ps")
