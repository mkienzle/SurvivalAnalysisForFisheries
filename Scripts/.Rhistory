sim$catch
curve(logistic(25,5,x), from = 0, to = 20)
curve(logistic(20,4,x), from = 0, to = 20)
curve(logistic(10,2,x), from = 0, to = 20)
source("NewTest.R")
sim$catch
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
sim$catch
source("NewTest.R")
nb.at.age.sample
nb.at.age.sample
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
nb.at.age
nb.at.age.sample
source("NewTest.R")
nb.at.age.sample
nb.at.age.sample
source("NewTest.R")
source("NewTest.R")
source("NewTest.R")
nb.at.age.sample
system("ls")
population <- GenerateData2(max.age = 10, nb.of.cohort = 17)
source("UsefulFunctions.R")
source("UsefulFunctions.R")
draw.sample2(population$catch, 10)
draw.sample2(population$catch, 10)
source("UsefulFunctions.R")
draw.sample2(population$catch, 10)
rowSums(draw.sample2(population$catch, 10))
rowSums(draw.sample2(population$catch, 100))
rowSums(draw.sample2(population$catch, 1e3))
source("SimulationsTesting.R")
source("SimulationsTesting.R")
rm(list=ls())
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
is.matrix(population$catch)
is.list(population)
system("pwd")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
population$catch
nb.at.age.sample
rowSums(nb.at.age.sample)
source("SimulationsTesting.R")
nb.at.age.sample
source("SimulationsTesting.R")
source("SimulationsTesting.R")
population$catch
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
population$catch
nb.at.age.sample
mean(nb.at.age.sample / population$catch)
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
nrows(nb.at.age.sample)
rowSums(nb.at.age.sample)
nb.at.age.sample
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
nb.at.age.sample
nb.at.age.sample
source("SimulationsTesting.R"
)
rm(list = ls())
source("SimulationsTesting.R")
population$catch
nb.at.age.sample
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
mean(nb.at.age.sample / population$catch)
mean(nb.at.age.sample / population$catch)
source("SimulationsTesting.R")
mean(nb.at.age.sample / population$catch)
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
?error
?warning
population$effort
population$effort[,1]
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
 t(n * population$effort[,1])
source("SimulationsTesting.R")
as.vector(n * population$effort[,1])
length(as.vector(n * population$effort[,1]))
source("SimulationsTesting.R")
source("SimulationsTesting.R")
as.vector(n * population$effort[,1])
as.vector(n * population$effort[,1])
as.vector(n * population$effort[,1])
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
mean(nb.at.age.sample / population$catch)
source("SimulationsTesting.R")
mean(nb.at.age.sample / population$catch)
source("SimulationsTesting.R")
mean(nb.at.age.sample / population$catch)
nb.at.age.sample
source("SimulationsTesting.R")
source("SimulationsTesting.R")
nb.at.age.sample
mean(nb.at.age.sample / population$catch)
source("SimulationsTesting.R")
mean(nb.at.age.sample / population$catch)
nb.at.age.sample
rowSums(nb.at.age.sample)
plot(rowSums(nb.at.age.sample), population$effort[,1])
source("SimulationsTesting.R")
population$catch
rowSums(population$catch)
nb.at.age.sample / outer(rowSums(nb.at.age.sample), rep(1,ncol(nb.at.age.sample))
)
rowSums(nb.at.age.sample / outer(rowSums(nb.at.age.sample), rep(1,ncol(nb.at.age.sample))))
nb.at.age.sample / outer(rowSums(nb.at.age.sample), rep(1,ncol(nb.at.age.sample)))
prop.at.age.sample <- nb.at.age.sample / outer(rowSums(nb.at.age.sample), rep(1,ncol(nb.at.age.sample)))
outer(rowSums(population$catch), rep(1, nrow(nb.at.age.sample)))
outer(rowSums(population$catch), rep(1, nrow(nb.at.age.sample))) * prop.at.age.sample
outer(rowSums(population$catch), rep(1, ncol(nb.at.age.sample))) * prop.at.age.sample
dim(population$catch)
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
raised.number <- outer(rowSums(population$catch), rep(1, ncol(nb.at.age.sample))) * prop.at.age.sample
raised.number
sum(raised.number)
sum(nb.at.age.sample) / sum(raised.number)
source("SimulationsTesting.R")
sum(nb.at.age.sample) / sum(raised.number)
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
rowSums(nb.at.age.sample)
source("SimulationsTesting.R")
rowSums(nb.at.age.sample)
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
rowSums(nb.at.age.sample)
mean(rowSums(nb.at.age.sample))
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
source("SimulationsTesting.R")
rm(list = ls())
source("SimulationsTesting.R")
source("SimulationStudy.R")
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e6, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e6, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e6, verbose = TRUE)
c(NA,2)
which(is.na(c(NA,2)))
which(is.na(c(1,2)))
length(which(is.na(c(1,2))))
length(which(is.na(c(1,2=NA))))
length(which(is.na(c(1,NA))))
result$value
result$par
result$par
result$par ==  c(5e-2,5e-2,1,1)
which(is.true(result$par ==  c(5e-2,5e-2,1,1)))
??is.true
??is.TRUE
sum(result$par ==  c(5e-2,5e-2,1,1)) > 0
result$par[1] < 5e-2
result$par[1] <- 5e-2
sum(result$par ==  c(5e-2,5e-2,1,1)) > 0
source("SimulationStudy.R")
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
result$par ==  c(15,1,20,20)
result$par ==  c(15)
source("SimulationStudy.R")
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
source("SimulationStudy.R")
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
source("SimulationStudy.R")
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e2, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e1, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e1, verbose = TRUE)
SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e1, verbose = TRUE)
tmp <- SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e1, verbose = TRUE)
rowSums(tmp$nb.at.age.sample)
source("SimulationStudy.R")
tmp <- SamplingStrategy2withCorrection(max.age = 10, nb.of.cohort = 17, n.sample.per.year=1e1, verbose = TRUE)
rowSums(tmp$corrected.nb.at.age.sample)
mean(rowSums(tmp$corrected.nb.at.age.sample))
source("SimulationStudy.R")
source("SimulationStudy.R")
source("SimulationStudy.R")
source("SimulationStudy.R")
source("SimulationStudy.R")
source("SimulationStudy.R")
source("SimulationStudy.R")
source("SimulationStudy.R")
source("SimulationStudy.R")
source("SimulationStudy.R")
results <- list()
tm
tmp
is.list(tmp)
c(random.number = 3, tmp)
combination.of.par <- expand.grid(max.age = 8:10, nb.of.cohort = seq(10,30,2), n.sample.per.year = seq(1e3,1e4,1e3))
combination.of.par
compare.estimates <- data.frame(
    max.age = NA,
    nb.of.cohort = NA,
    n.sample.per.year = NA,
    random.seed = NA,
    sampling.type = NA,
    Nat.Mort.sim = NA,
    Nat.Mort.est = NA,
    Nat.Mort.error = NA)
rbind(compare.estimates, compare.estimates)
tmp1
tmp2
objects()
result
source("SimulationStudy.R")
compare.estimates
source("SimulationStudy.R")
compare.estimates
source("SimulationStudy.R"; compare.estimates
source("SimulationStudy.R"); compare.estimates
tmp1
tmp2
source("SimulationStudy.R"); compare.estimates
source("SimulationStudy.R"); compare.estimates
source("SimulationStudy.R"); compare.estimates
head(compare.estimates)
with(compare.estimates[-1,], table(sampling.type, Optimization.status))
system("pwd")
system("ls")
system("ls ..")
system("mkdir ../Results")
system("mkdir ../Results/Simulations")
system("mkdir ../Results/Simulations/Archive")
date()
?date
format(Sys.time(), "%a %b %d %H:%M:%S %Y")
format(Sys.time(), "%a-%b %d %H:%M:%S %Y")
format(Sys.time(), "%a-%b-%d-%Y")
round(runif(1
write.csv(file = "../Results/CompareEstimates.csv", compare.estimates[-1,])
write.csv(file = paste("../Results/Archive/CompareEstimates", format(Sys.time(), "%a-%b-%d-%H:%M:%S-%Y"), sep="-"), compare.estimates[-1,])
write.csv(file = "../Results/Simulations/CompareEstimates.csv", compare.estimates[-1,])
write.csv(file = paste("../Results/Simulations/Archive/CompareEstimates", format(Sys.time(), "%a-%b-%d-%H:%M:%S-%Y"), sep="-"), compare.estimates[-1,])
source("SimulationStudy.R"); compare.estimates
all.simulations
size(all.simulations)
length(all.simulations)
source("SimulationStudy.R"); compare.estimates
length(all.simulations)
source("SimulationStudy.R"); compare.estimates
source("PlotSimulationsResults.R")
source("PlotSimulationsResults.R")
with(compare.estimates[-1,], table(sampling.type, Optimization.status))
with(dataset, table(sampling.type, Optimization.status))
head(dataset)
source("PlotSimulationsResults.R")
source("PlotSimulationsResults.R")
source("PlotSimulationsResults.R")
source("PlotSimulationsResults.R")
source("PlotSimulationsResults.R")
source("PlotSimulationsResults.R")
source("PlotSimulationsResults.R")
source("PlotSimulationsResults.R")
source("PlotSimulationsResults.R")
expand.grid(1:2, 1:2)
expand.grid(1:2, rep(1:2, each = 3))
combination.of.par <- expand.grid(max.age = 8:10, nb.of.cohort = seq(16,30,2), n.sample.per.year = rep(seq(1e3,1e4,1e3), each = 1e3))
dim(combination.of.par)
source("PlotSimulationsResults.R")
source("SimulationStudy.R");
source("SimulationStudy.R");
source("SimulationStudy.R");
source("PlotSimulationsResults.R")
# Keep results
write.csv(file = "../Results/Simulations/CompareEstimates.csv", compare.estimates[-1,])
write.csv(file = paste("../Results/Simulations/Archive/CompareEstimates", format(Sys.time(), "%a-%b-%d-%H:%M:%S-%Y"), sep="-"), compare.estimates[-1,])
source("PlotSimulationsResults.R")
head(dataset)
dim(head(dataset))
dim(dataset)
dataset <- read.csv( file = "../Results/Simulations/CompareEstimates.csv")
with(dataset, table(sampling.type, Optimization.status))
library(ggplot2)
p1 <- ggplot(aes(x= as.factor(round(Nat.Mort.sim,1)), y=Nat.Mort.est, fill = sampling.type),
             data = subset(dataset, Optimization.status == "successful" & n.sample.per.year == 1e4)) + geom_boxplot()
print(p1)
dim(subset(dataset, Optimization.status == "successful" & n.sample.per.year == 1e4))
source("PlotSimulationsResults.R")
with(dataset, unique(n.sample.per.year))
combination.of.par <- expand.grid(max.age = 8:10, nb.of.cohort = seq(16,30,2), n.sample.per.year = rep(seq(1e3,1e4,1e3), each = 1e2))
dim(combination.of.par)
combination.of.par <- expand.grid(max.age = c(8,12,16), nb.of.cohort = seq(20,40,10), n.sample.per.year = rep(seq(1e3,1e4,1e3), each = 1e2))
dim(combination.of.par)
source("SimulationStudy.R");
source("PlotSimulationsResults.R")
?save
save(all.simulations, file = "../Results/Simulations/all.simulations.R")
save(all.simulations, file = paste("../Results/Simulations/Archive/all.simulations-", format(Sys.time(), "%a-%b-%d-%H:%M:%S-%Y"),".R", sep="")
)
library(ggplot2)
library(SAFR)
q()
rm(list = ls())
library(SAFR)
example(llfunc3)
example(llfunc3)
q()
library(SAFR)
example(llfunc3)
example(llfunc4)
example(llfunc5)
R
y
example(llfunc5)
library(SAFR)
example(llfunc5)
q()
library(SAFR)
example(llfunc5)
library(SAFR)
example(llfunc4)
q()
?optim
library(SAFR)
example(llfunc4)
i
i <- 1
# Keep all simulations
all.simulations <- list()
counter <- 1
# Combination of paramaters
combination.of.par <- expand.grid(max.age = c(8,12,16), nb.of.cohort = seq(20,40,10), n.sample.per.year = rep(seq(1e3,1e4,1e3), each = 1e2))
# How many simulations ?
n.simulations <- nrow(combination.of.par)
# track simulation using
rand.seeds <- runif(n.simulations, min = 1, max = 1e6)
tmp1 <- SamplingStrategy2(max.age = combination.of.par$max.age[i], nb.of.cohort = combination.of.par$nb.of.cohort[i], n.sample.per.year=combination.of.par$n.sample.per.year[i], verbose = FALSE)
# Useful functions
source("SimulationFunctions.R")
tmp1 <- SamplingStrategy2(max.age = combination.of.par$max.age[i], nb.of.cohort = combination.of.par$nb.of.cohort[i], n.sample.per.year=combination.of.par$n.sample.per.year[i], verbose = FALSE)
source("SimulationFunctions.R")
tmp1 <- SamplingStrategy2(max.age = combination.of.par$max.age[i], nb.of.cohort = combination.of.par$nb.of.cohort[i], n.sample.per.year=combination.of.par$n.sample.per.year[i], verbose = FALSE)
names(tmp1)
names(tmp1$population)
source("SimulationStudy.R")
source("SimulationStudy.R")
compare.estimates
names(tmp1)
names(tmp1$population)
names(tmp1$nb.at.age.sample)
tmp1$nb.at.age.sample
tmp1$optimization.status
tmp1$optimization
names(tmp1)
source("SimulationStudy.R")
tmp1$optimization
source("SimulationStudy.R")
tmp2$optimization$catchability.scaling.factor
tmp1$optimization$catchability.scaling.factor
source("SimulationStudy.R")
compare.estimates
names9tmp1$population)
names(tmp1$population)
tmp1$population$logistic.par
tmp1$optimization$par[3]
tmp1$uncertainty
tmp1$uncertainties
tmp1$uncertainties[3]
source("SimulationStudy.R")
compare.estimates
q()
